#!/usr/bin/env bash

[[ "$(pgrep -f "alacritty -e nvim" | wc -l)" -ne 0 ]] && \
	DMEDITOR="tdrop -am -w 48% -y 4% -x 1% -h 95% -n 8 alacritty -e nvim " || \
	DMEDITOR="tdrop -am -w 49% -y 4% -x 50% -h 95% -n 9 alacritty -e nvim "

: "${DMEDITOR}"
	declare -A options
		options[alacritty]="$HOME/.config/alacritty/alacritty.yml"
		options[bashrc]="$HOME/.bashrc"
		options[bashprompt]="$HOME/.local/bin/fancy-bash-prompt.sh"
		options[dmcalc]="$HOME/.local/bin/dmcalc"
		options[dmconf]="$HOME/.local/bin/dmconf"
		options[dmenufm]="$HOME/.local/bin/dmenufm"
		#	options[dmenuhandler]="$HOME/.local/bin/dmenuhandler"
		options[dmkill]="$HOME/.local/bin/dmkill"
		options[dmlogout]="$HOME/.local/bin/dmlogout"
		options[dmprompt]="$HOME/.local/bin/dmprompt"
		options[dmqute]="$HOME/.local/bin/dmqute"
		options[dmsearch]="$HOME/.local/bin/dmsearch"
		options[dmstyli.sh]="$HOME/.local/bin/dmstyli.sh"
		options[dmtodo]="$HOME/.local/bin/dmtodo"
		options[grub]="/etc/default/grub"
		options[gtk2]="$HOME/.gtkrc-2.0"
		options[gtk3]="$HOME/.config/gtk-3.0/settings.ini"
		options[i3]="$HOME/.config/i3/config"
		options[i3blocks]="$HOME/.config/i3blocks/i3blocks.conf"
		options[i3scrot]="$HOME/.config/i3-scrot.conf"
		options[linkhandler]="$HOME/.local/bin/linkhandler"
		options[mbsync]="$HOME/.mbsyncrc"
		options[mpv]="$HOME/.config/mpv/input.conf"
		options[muttrc]="$HOME/.config/mutt/muttrc"
		options[neovim]="$HOME/.config/nvim/init.vim"
		options[newsboat conf]="$HOME/.config/newsboat/config"
		options[newsboat urls]="$HOME/.config/newsboat/urls"
		options[phone]="$HOME/.local/bin/backup-phone.sh"
		options[picom]="$HOME/.config/picom/picom.conf"
		options[polybar]="$HOME/.config/polybar/config"
		options[qBookmarks]="$HOME/.config/qutebrowser/bookmarks/urls"
		options[qConfig.py]="$HOME/.config/qutebrowser/config.py"
		options[qDmenu]="$HOME/.config/qutebrowser/userscripts/dmenu-open"
		options[qHomepage]="$HOME/p-dot-script/qutebrowser/html/homepage.html"
		options[qQuickmarks]="$HOME/.config/qutebrowser/quickmarks"
		options[ranger]="$HOME/.config/ranger/rc.conf"
		options[ranger commands]="$HOME/.config/ranger/commands.py"
		options[ranger scope]="$HOME/.config/ranger/scope.sh"
		options[remind]="$HOME/p-dot-script/remind.rem"
		options[styli.sh]="$HOME/.local/bin/styli.sh"
		options[sxiv image-info]="$HOME/.config/sxiv/exec/image-info"
		options[sxiv key-handler]="$HOME/.config/sxiv/exec/key-handler"
		options[sys empty-trash]="$HOME/.local/bin/empty-trash.sh"
		options[sys poweroff]="$HOME/.local/bin/poweroff.sh"
		options[sys push-all]="$HOME/.local/bin/push-all"
		options[sys reboot]="$HOME/.local/bin/reboot.sh"
		options[sys restore]="$HOME/p-dot-script/system-restore.sh"
		options[sys readme]="$HOME/p-dot-script/README.md"
		options[xresources]="$HOME/.Xresources"

# Clean options array making sure that the files exist
declare -A options_clean
  for i in "${!options[@]}"; do
    [[ -f ${options["${i}"]} ]] && options_clean["${i}"]=${options["${i}"]}
  done

# Piping the above array (cleaned) into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${!options_clean[@]}" | sort | dmenu -i -l 50 -fn "Roboto Mono Nerd Font-8" -p 'Edit config:' "$@")

# What to do when/if we choose a file to edit.
if [ "$choice" ]; then
  cfg=$(printf '%s\n' "${options_clean["${choice}"]}")
  $DMEDITOR "$cfg"

# What to do if we just escape without choosing anything.
else
    echo "Program terminated." && exit 0
fi
